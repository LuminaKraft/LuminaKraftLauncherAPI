name: Deploy LuminaKraft Launcher API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      env:
        CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
      
    - name: Test Docker build
      run: docker build -t luminakraft-launcher-api:test .

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create deployment package
      run: |
        # Create a clean directory for deployment
        mkdir -p deploy-package
        
        # Copy specific files and directories we need
        cp package.json package-lock.json deploy-package/
        cp Dockerfile docker-compose.yml deploy-package/
        cp -r src/ deploy-package/
        cp -r data/ deploy-package/
        cp -r scripts/ deploy-package/ || true
        cp README.md deploy-package/ || true
        cp .dockerignore deploy-package/ || true
        
        # Create tar from the clean directory
        cd deploy-package
        tar -czf ../luminakraft-api.tar.gz .
        cd ..
        
        # Verify the archive was created
        ls -la luminakraft-api.tar.gz
        
    - name: Transfer files and deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        port: ${{ secrets.DEPLOY_PORT }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          # Create app directory
          APP_DIR="$HOME/luminakraft-launcher-api"
          rm -rf $APP_DIR
          mkdir -p $APP_DIR
          
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        port: ${{ secrets.DEPLOY_PORT }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        source: "luminakraft-api.tar.gz"
        target: "$HOME/"
        
    - name: Extract and deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        port: ${{ secrets.DEPLOY_PORT }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          # Navigate to app directory
          APP_DIR="$HOME/luminakraft-launcher-api"
          cd $HOME
          
          # Extract files
          tar -xzf luminakraft-api.tar.gz -C $APP_DIR
          cd $APP_DIR
          
          # Verify files were extracted
          ls -la
          
          # Stop existing containers
          docker-compose down || true
          
          # Set up environment variable for docker-compose
          API_KEY_ESCAPED=$(echo '${{ secrets.CURSEFORGE_API_KEY }}' | sed 's/\$/\$\$/g')
          export CURSEFORGE_API_KEY="$API_KEY_ESCAPED"
          
          # Build and start with docker-compose
          docker-compose build --no-cache
          docker-compose up -d
          
          # Show container status and wait for health check
          sleep 10
          docker-compose ps
          docker logs luminakraft-launcher-api
          
          # Clean up
          rm -f $HOME/luminakraft-api.tar.gz
          docker image prune -f
          
    - name: Verify deployment
      run: |
        echo "Waiting for deployment to be ready..."
        sleep 30
        
        # Test health endpoint (no auth required)
        echo "Testing health endpoint..."
        curl -f https://api.luminakraft.com/health || echo "Health check failed"
        
        # Test authenticated endpoints with dummy token
        echo "Testing authenticated endpoints..."
        DUMMY_TOKEN=$(echo -n 'deployment_test_12345' | base64)
        curl -H "x-lk-token: $DUMMY_TOKEN" https://api.luminakraft.com/v1/info || echo "Info endpoint not accessible"
        curl -H "x-lk-token: $DUMMY_TOKEN" https://api.luminakraft.com/v1/curseforge/test || echo "CurseForge test endpoint not accessible" 