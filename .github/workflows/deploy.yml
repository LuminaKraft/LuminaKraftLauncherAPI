name: Deploy LuminaKraft Launcher API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Test Docker build
      run: docker build -t luminakraft-launcher-api:test .

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create deployment package
      run: |
        # Create a clean directory for deployment
        mkdir -p deploy-package
        
        # Copy specific files and directories we need
        cp package.json package-lock.json deploy-package/
        cp Dockerfile docker-compose.yml deploy-package/
        cp -r src/ deploy-package/
        cp -r scripts/ deploy-package/ || true
        cp README.md deploy-package/ || true
        cp .dockerignore deploy-package/ || true
        
        # Create tar from the clean directory
        cd deploy-package
        tar -czf ../luminakraft-api.tar.gz .
        cd ..
        
        # Verify the archive was created
        ls -la luminakraft-api.tar.gz
        
    - name: Transfer files and deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        port: ${{ secrets.DEPLOY_PORT }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          # Create app directory
          APP_DIR="$HOME/luminakraft-launcher-api"
          rm -rf $APP_DIR
          mkdir -p $APP_DIR
          
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        port: ${{ secrets.DEPLOY_PORT }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        source: "luminakraft-api.tar.gz"
        target: "$HOME/"
        
    - name: Extract and deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        port: ${{ secrets.DEPLOY_PORT }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          # Navigate to app directory
          APP_DIR="$HOME/luminakraft-launcher-api"
          cd $HOME
          
          # Extract files
          tar -xzf luminakraft-api.tar.gz -C $APP_DIR
          cd $APP_DIR
          
          # Verify files were extracted
          ls -la
          
          # Stop existing container
          docker stop luminakraft-api || true
          docker rm luminakraft-api || true
          
          # Build new image
          docker build -t luminakraft-launcher-api:latest .
          
          # Run new container
          docker run -d \
            --name luminakraft-api \
            --restart unless-stopped \
            -p 9374:9374 \
            luminakraft-launcher-api:latest
          
          # Show container status
          docker ps | grep luminakraft-api || echo "Container not running"
          
          # Clean up
          rm -f $HOME/luminakraft-api.tar.gz
          docker image prune -f
          
    - name: Verify deployment
      run: |
        sleep 15
        # Test the API
        curl -f https://api.luminakraft.com/health || echo "API not accessible yet, checking..."
        curl -f https://api.luminakraft.com/v1/info || echo "Info endpoint not accessible yet" 